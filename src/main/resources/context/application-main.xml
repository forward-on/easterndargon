<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:c="http://www.springframework.org/schema/c" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
    http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/aop
    http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd
    ">

    <!-- 默认的注解映射的支持 -->
    <mvc:annotation-driven/>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ly.interceptor.MyInterceptor"/>
        </mvc:interceptor>
        <!--<mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ly.interceptor.CorsInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.ly.interceptor.RspVoExceptionInterceptor" c:jsonWriter-ref="jsonWriter"/>
        </mvc:interceptor>-->
    </mvc:interceptors>

    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.bbtree.interceptor.VerifyOpenPlatformInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/swagger/**"/>
            <mvc:exclude-mapping path="/v2/**"/>
            <mvc:exclude-mapping path="/webjars/**"/>
            <bean class="com.bbtree.cors.CorsInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/swagger/**"/>
            <mvc:exclude-mapping path="/v2/**"/>
            <mvc:exclude-mapping path="/webjars/**"/>
            <bean class="com.bbtree.crypt.interceptor.EncryptInterceptor"/>
        </mvc:interceptor>

        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/swagger/**"/>
            <mvc:exclude-mapping path="/v2/**"/>
            <mvc:exclude-mapping path="/webjars/**"/>
            <bean class="com.bbtree.except.interceptor.RspVoExceptionInterceptor" c:jsonWriter-ref="jsonWriter" />
        </mvc:interceptor>
    </mvc:interceptors>-->

    <!-- 日志切入点 -->
    <bean id="logService" class="com.ly.log.LogServiceImpl"/>
    <aop:config>
        <!-- 切入点 -->
        <aop:pointcut expression="execution(* com.ly..*.*(..))" id="logPointcut" />
        <!-- 切面 -->
        <aop:aspect id="logAspect" ref="logService">
            <aop:before method="log" pointcut-ref="logPointcut" />
            <aop:after-returning method="logArgAndReturn" returning="returnObj" pointcut-ref="logPointcut" />
        </aop:aspect>
    </aop:config>


    <!-- MVC 常用的注解 -->
    <!--<bean id="jsonWriter" class="com.bbtree.except.util.JsonWriter">
        <constructor-arg name="config">
            <null />
        </constructor-arg>
        <constructor-arg name="filters">
            <null />
        </constructor-arg>
        <constructor-arg name="features">
            <array>
                <util:constant
                        static-field="com.alibaba.fastjson.serializer.SerializerFeature.QuoteFieldNames" />
                <util:constant
                        static-field="com.alibaba.fastjson.serializer.SerializerFeature.WriteMapNullValue" />
                <util:constant
                        static-field="com.alibaba.fastjson.serializer.SerializerFeature.WriteEnumUsingToString" />
                <util:constant
                        static-field="com.alibaba.fastjson.serializer.SerializerFeature.SkipTransientField" />
                <util:constant
                        static-field="com.alibaba.fastjson.serializer.SerializerFeature.PrettyFormat" />
                <util:constant
                        static-field="com.alibaba.fastjson.serializer.SerializerFeature.WriteDateUseDateFormat" />
                <util:constant
                        static-field="com.alibaba.fastjson.serializer.SerializerFeature.DisableCheckSpecialChar" />
            </array>
        </constructor-arg>
    </bean>-->


    <!--<mvc:annotation-driven>
        <mvc:argument-resolvers>
            <bean class="com.bbtree.crypt.annotation.CryptParamResolver"/>
        </mvc:argument-resolvers>
        <mvc:message-converters>
            <bean class="com.bbtree.crypt.converter.EncryptConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
        &lt;!&ndash;<mvc:message-converters>

        </mvc:message-converters>&ndash;&gt;
    </mvc:annotation-driven>-->

    <!-- 设置使用注解的类所在的jar包 ,当使用 <context:component-scan/> 后，就可以将 <context:annotation-config/>
        移除了 -->
    <context:component-scan base-package="com.ly"/>

    <!-- 完成请求和注解POJO的映射 -->
    <!--<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />-->

    <!-- 激活annotation功能 -->
    <!--<context:annotation-config />-->
    <!-- 激活annotation功能 -->
    <!--<context:spring-configured />-->

    <!--静态资源 -->
    <mvc:default-servlet-handler/>

    <!--<mvc:resources mapping="swagger-ui.html" location="classpath:/META-INF/resources/"/>-->
    <!--<mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>-->
    <!--<bean id="viewResolver"-->
    <!--class="org.springframework.web.servlet.view.InternalResourceViewResolver">-->
    <!--<property name="viewClass"-->
    <!--value="org.springframework.web.servlet.view.JstlView" />-->
    <!--<property name="prefix" value="/" />-->
    <!--<property name="suffix" value=".html"></property>-->
    <!--</bean>-->

    <!--请求返回时中文不乱码，设置UTF-8-->
    <mvc:annotation-driven>
        <mvc:message-converters>
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <!--true:cglib代理  false即默认:JDK动态代理-->
    <!--<aop:aspectj-autoproxy proxy-target-class="true"/>-->
    <aop:aspectj-autoproxy/>

    <import resource="classpath:context/applicationContext-*.xml"/>

</beans>